// ignore_for_file: unnecessary_this

class Autogenerated {
  String? msisdn;
  String? s5GMode;
  String? packageName;
  String? packageState;
  String? maxQuota;
  String? remainingQuota;
  String? startDate;
  String? expireDate;
  String? currentMode;
  Policy? policy;

  Autogenerated(
      {this.msisdn,
      this.s5GMode,
      this.packageName,
      this.packageState,
      this.maxQuota,
      this.remainingQuota,
      this.startDate,
      this.expireDate,
      this.currentMode,
      this.policy});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    msisdn = json['msisdn'];
    s5GMode = json['5GMode'];
    packageName = json['packageName'];
    packageState = json['packageState'];
    maxQuota = json['maxQuota'];
    remainingQuota = json['remainingQuota'];
    startDate = json['startDate'];
    expireDate = json['expireDate'];
    currentMode = json['currentMode'];
    policy =
        json['policy'] != null ? new Policy.fromJson(json['policy']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['msisdn'] = this.msisdn;
    data['5GMode'] = this.s5GMode;
    data['packageName'] = this.packageName;
    data['packageState'] = this.packageState;
    data['maxQuota'] = this.maxQuota;
    data['remainingQuota'] = this.remainingQuota;
    data['startDate'] = this.startDate;
    data['expireDate'] = this.expireDate;
    data['currentMode'] = this.currentMode;
    if (this.policy != null) {
      data['policy'] = this.policy!.toJson();
    }
    return data;
  }
}

class Policy {
  String? mode;
  String? startDate;
  String? expireDate;
  String? spentTimePerDay;
  String? count;
  String? bandqidthRemaining;

  Policy(
      {this.mode,
      this.startDate,
      this.expireDate,
      this.spentTimePerDay,
      this.count,
      this.bandqidthRemaining});

  Policy.fromJson(Map<String, dynamic> json) {
    mode = json['mode'];
    startDate = json['startDate'];
    expireDate = json['expireDate'];
    spentTimePerDay = json['spentTimePerDay'];
    count = json['count'];
    bandqidthRemaining = json['bandqidthRemaining'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['mode'] = this.mode;
    data['startDate'] = this.startDate;
    data['expireDate'] = this.expireDate;
    data['spentTimePerDay'] = this.spentTimePerDay;
    data['count'] = this.count;
    data['bandqidthRemaining'] = this.bandqidthRemaining;
    return data;
  }
}
